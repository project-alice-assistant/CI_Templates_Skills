stages:
  - test
  - tag
  - deploy


skillValidation:
  stage: test
  image: python:3.7
  before_script:
    - python3 -m pip install --upgrade pip
    - pip3 install projectalice-sk
  script:
    - projectalice-sk validate --paths .


mypyValidation:
  stage: test
  image: python:3.7
  before_script:
    - python3 -m pip install --upgrade pip
    - pip3 install mypy
    - apt-get update -qq && apt-get install -qq curl
    - curl https://raw.githubusercontent.com/project-alice-assistant/CI_Templates_Skills/master/mypy.ini -o mypy.ini
  script:
    - mypy .


sonarqube-check:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    SONAR_TOKEN: $SONAR_TOKEN
    SONAR_HOST_URL: "https://sonarcloud.io"
    GIT_DEPTH: 0
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.projectKey="project-alice-assistant_$CI_PROJECT_NAME" -Dsonar.organization=project-alice-assistant
  allow_failure: true


tagging-repo:
  stage: tag
  only:
    - pushes
    - web
  image: debian:stable-slim
  before_script:
    - apt-get update -qq && apt-get install -qq curl jq
  script:
    - curl https://raw.githubusercontent.com/project-alice-assistant/CI_Templates_Skills/master/tagging.sh -o tagging.sh
    - chmod +x tagging.sh
    - ./tagging.sh


trigger-store-build:
  stage: deploy
  only:
    - pushes
    - web
    - api
  script:
    - curl --location --request POST https://gitlab.com/api/v4/projects/16103315/trigger/pipeline --form 'token=$CI_JOB_TOKEN' --form 'ref=master'
